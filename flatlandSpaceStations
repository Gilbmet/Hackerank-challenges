'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
inputString += inputStdin;
});

process.stdin.on('end', _ => {
inputString = inputString.replace(/\s*$/, '')
.split('\n')
.map(str => str.replace(/\s*$/, ''));

main();

});

function readLine() {
return inputString[currentLine++];
}

// Complete the flatlandSpaceStations function below.
function flatlandSpaceStations(n, c) {
if (n === c.length) {
return 0;
}
if (c.length === 0) {
return n - 1;
}
let md = 0;
const cc = c.sort((a, b) => a - b);

for (let i = 0; i < cc.length - 1; i++) {
    const fs = cc[i];
    const ii = i + 1;
    const ss = cc[ii];
    const ds = ss - fs;
    
    if ((ds / 2) > md) {
        md = Math.floor(ds / 2);
    }
}

const max = cc[cc.length - 1];
const r = n > max ? (n - max) - 1 : 0;

const min = cc[0];
const rm = 0 < min ? min : 0;

return Math.max(rm, r, md);
}

function main() {
const ws = fs.createWriteStream(process.env.OUTPUT_PATH);
const nm = readLine().split(' ');

const n = parseInt(nm[0], 10);

const m = parseInt(nm[1], 10);

const c = readLine().split(' ').map(cTemp => parseInt(cTemp, 10));

const result = flatlandSpaceStations(n, c);

ws.write(result + "\n");

ws.end();
}
